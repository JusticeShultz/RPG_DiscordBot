// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPG_Bot.Resources.Database;

namespace RPG_Bot.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("RPG_Bot.Resources.Database.UserData", b =>
                {
                    b.Property<ulong>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("Age");

                    b.Property<uint>("AmountDonated");

                    b.Property<uint>("AngelPotionCount");

                    b.Property<uint>("Artifact_Armor");

                    b.Property<uint>("Artifact_Cost");

                    b.Property<uint>("Artifact_Damage");

                    b.Property<uint>("Artifact_Health");

                    b.Property<uint>("Artifact_Level");

                    b.Property<uint>("Artifact_ModID");

                    b.Property<uint>("Artifact_ModValue");

                    b.Property<string>("Artifact_Name");

                    b.Property<string>("Artifact_Rarity");

                    b.Property<uint>("Artifact_Regen");

                    b.Property<string>("Artifact_URL");

                    b.Property<uint>("Belt_Armor");

                    b.Property<uint>("Belt_Cost");

                    b.Property<uint>("Belt_Health");

                    b.Property<uint>("Belt_Level");

                    b.Property<uint>("Belt_ModID");

                    b.Property<string>("Belt_Name");

                    b.Property<string>("Belt_Rarity");

                    b.Property<uint>("Belt_Regen");

                    b.Property<string>("Belt_URL");

                    b.Property<uint>("Boot_Armor");

                    b.Property<uint>("Boot_Cost");

                    b.Property<uint>("Boot_Health");

                    b.Property<uint>("Boot_Level");

                    b.Property<uint>("Boot_ModID");

                    b.Property<string>("Boot_Name");

                    b.Property<string>("Boot_Rarity");

                    b.Property<uint>("Boot_Regen");

                    b.Property<string>("Boot_URL");

                    b.Property<uint>("Charisma");

                    b.Property<uint>("Chestplate_Armor");

                    b.Property<uint>("Chestplate_Cost");

                    b.Property<uint>("Chestplate_Health");

                    b.Property<uint>("Chestplate_Level");

                    b.Property<uint>("Chestplate_ModID");

                    b.Property<string>("Chestplate_Name");

                    b.Property<string>("Chestplate_Rarity");

                    b.Property<uint>("Chestplate_Regen");

                    b.Property<string>("Chestplate_URL");

                    b.Property<string>("Class");

                    b.Property<uint>("CommonBoxCount");

                    b.Property<uint>("CurrentHealth");

                    b.Property<int>("DailyClaimed");

                    b.Property<uint>("Damage");

                    b.Property<int>("Day");

                    b.Property<uint>("Dexterity");

                    b.Property<uint>("DragonPotionCount");

                    b.Property<uint>("EpicBoxCount");

                    b.Property<string>("Equipped_Spell_1");

                    b.Property<string>("Equipped_Spell_2");

                    b.Property<string>("Equipped_Spell_3");

                    b.Property<string>("Equipped_Spell_4");

                    b.Property<uint>("EventBoxCount");

                    b.Property<uint>("EventData1_Int");

                    b.Property<string>("EventData1_String");

                    b.Property<uint>("EventData2_Int");

                    b.Property<string>("EventData2_String");

                    b.Property<uint>("EventData3_Int");

                    b.Property<string>("EventData3_String");

                    b.Property<uint>("EventData4_Int");

                    b.Property<string>("EventData4_String");

                    b.Property<uint>("EventData5_Int");

                    b.Property<string>("EventData5_String");

                    b.Property<uint>("EventData6_Int");

                    b.Property<string>("EventData6_String");

                    b.Property<uint>("EventData7_Int");

                    b.Property<string>("EventData7_String");

                    b.Property<uint>("EventData8_Int");

                    b.Property<string>("EventData8_String");

                    b.Property<uint>("EventData9_Int");

                    b.Property<string>("EventData9_String");

                    b.Property<uint>("EventItem1");

                    b.Property<uint>("EventItem2");

                    b.Property<uint>("EventItem3");

                    b.Property<uint>("Explored_Abandoned_Village");

                    b.Property<uint>("Explored_Astral_Reaches");

                    b.Property<uint>("Explored_Borealis_Gates");

                    b.Property<uint>("Explored_Burning_Outcrop");

                    b.Property<uint>("Explored_Catacombs");

                    b.Property<uint>("Explored_Cliffside_Barricade");

                    b.Property<uint>("Explored_Corrupt_Citadel");

                    b.Property<uint>("Explored_Crawling_Coastline");

                    b.Property<uint>("Explored_Draconic_Nests");

                    b.Property<uint>("Explored_End_of_Asteria");

                    b.Property<uint>("Explored_Fell_Pantheon");

                    b.Property<uint>("Explored_Forest_Path");

                    b.Property<uint>("Explored_Frigid_Wastes");

                    b.Property<uint>("Explored_Frozen_Peaks");

                    b.Property<uint>("Explored_Goblin_Outpost");

                    b.Property<uint>("Explored_Hms_Reliant");

                    b.Property<uint>("Explored_Lair_of_Trenthola");

                    b.Property<uint>("Explored_Logada_Summits");

                    b.Property<uint>("Explored_Lunar_Temple");

                    b.Property<uint>("Explored_Magma_Pits");

                    b.Property<uint>("Explored_Makkosi_Camp");

                    b.Property<uint>("Explored_Megaton_Cove");

                    b.Property<uint>("Explored_Outer_Blockade");

                    b.Property<uint>("Explored_Quarantined_Village");

                    b.Property<uint>("Explored_Rayels_Terror_Tower");

                    b.Property<uint>("Explored_Roosting_Crags");

                    b.Property<uint>("Explored_Ruined_Outpost");

                    b.Property<uint>("Explored_Shattered_Streets");

                    b.Property<uint>("Explored_Shifted_Wastes");

                    b.Property<uint>("Explored_Skeleton_Caves");

                    b.Property<uint>("Explored_Snowy_Woods");

                    b.Property<uint>("Explored_Sombris_Monument");

                    b.Property<uint>("Explored_Stellar_Fields");

                    b.Property<uint>("Explored_Taken_Temple");

                    b.Property<uint>("Explored_The_Breach");

                    b.Property<uint>("Explored_Tomb_of_Heroes");

                    b.Property<uint>("Explored_Training_Forts");

                    b.Property<uint>("Explored_Twisted_Riverbed");

                    b.Property<uint>("Explored_Undying_Storm");

                    b.Property<uint>("Explored_Within_the_Breach");

                    b.Property<uint>("FlatHealthRegen");

                    b.Property<uint>("Gauntlet_Armor");

                    b.Property<uint>("Gauntlet_Cost");

                    b.Property<uint>("Gauntlet_Health");

                    b.Property<uint>("Gauntlet_Level");

                    b.Property<uint>("Gauntlet_ModID");

                    b.Property<string>("Gauntlet_Name");

                    b.Property<string>("Gauntlet_Rarity");

                    b.Property<uint>("Gauntlet_Regen");

                    b.Property<string>("Gauntlet_URL");

                    b.Property<string>("GodChoice");

                    b.Property<uint>("GodlyBoxCount");

                    b.Property<uint>("GoldAmount");

                    b.Property<uint>("Health");

                    b.Property<uint>("Helmet_Armor");

                    b.Property<uint>("Helmet_Cost");

                    b.Property<uint>("Helmet_Health");

                    b.Property<uint>("Helmet_Level");

                    b.Property<uint>("Helmet_ModID");

                    b.Property<string>("Helmet_Name");

                    b.Property<string>("Helmet_Rarity");

                    b.Property<uint>("Helmet_Regen");

                    b.Property<string>("Helmet_URL");

                    b.Property<int>("Hour");

                    b.Property<uint>("LargePotionCount");

                    b.Property<string>("Learned_Spells");

                    b.Property<uint>("LegendaryBoxCount");

                    b.Property<uint>("Legging_Armor");

                    b.Property<uint>("Legging_Cost");

                    b.Property<uint>("Legging_Health");

                    b.Property<uint>("Legging_Level");

                    b.Property<uint>("Legging_ModID");

                    b.Property<string>("Legging_Name");

                    b.Property<string>("Legging_Rarity");

                    b.Property<uint>("Legging_Regen");

                    b.Property<string>("Legging_URL");

                    b.Property<uint>("Level");

                    b.Property<uint>("LoseCount");

                    b.Property<uint>("Luck");

                    b.Property<uint>("MediumPotionCount");

                    b.Property<int>("Minute");

                    b.Property<uint>("MythicBoxCount");

                    b.Property<string>("Name");

                    b.Property<string>("Rank");

                    b.Property<uint>("RareBoxCount");

                    b.Property<uint>("RebornBoxCount");

                    b.Property<uint>("RebornGems");

                    b.Property<uint>("ReusableCurrency1");

                    b.Property<uint>("ReusableCurrency2");

                    b.Property<uint>("ReusableCurrency3");

                    b.Property<uint>("ReusableCurrency4");

                    b.Property<uint>("ReusableCurrency5");

                    b.Property<uint>("ReusableCurrency6");

                    b.Property<uint>("ReusableCurrency7");

                    b.Property<uint>("ReusableCurrency8");

                    b.Property<uint>("ReusableCurrency9");

                    b.Property<int>("Second");

                    b.Property<uint>("SkillPoints");

                    b.Property<uint>("SmallPotionCount");

                    b.Property<uint>("Stability");

                    b.Property<uint>("Stamina");

                    b.Property<uint>("StoredGold");

                    b.Property<uint>("Strength");

                    b.Property<uint>("Total_Areas_Discovered");

                    b.Property<uint>("Total_Bosses_Encountered");

                    b.Property<uint>("Total_Bosses_Slain");

                    b.Property<uint>("Total_Daily_Blessings_Obtained");

                    b.Property<uint>("Total_Damage_Dealt");

                    b.Property<uint>("Total_Damage_Taken");

                    b.Property<uint>("Total_Deaths");

                    b.Property<uint>("Total_Explorations");

                    b.Property<uint>("Total_Gambles_Lost");

                    b.Property<uint>("Total_Gambles_Won");

                    b.Property<uint>("Total_Gems_FromDaily_Blessings");

                    b.Property<uint>("Total_Gems_Obtained");

                    b.Property<uint>("Total_Gold_FromDaily_Blessings");

                    b.Property<uint>("Total_Gold_Obtained");

                    b.Property<uint>("Total_Gold_Stolen");

                    b.Property<uint>("Total_Items_Found");

                    b.Property<uint>("Total_Loot_Found_Exploring");

                    b.Property<uint>("Total_Lore_Found");

                    b.Property<uint>("Total_Monsters_Slain");

                    b.Property<uint>("Total_Nothings_Found");

                    b.Property<uint>("Total_PvP_Damage_Dealt");

                    b.Property<uint>("Total_Quests_Completed");

                    b.Property<uint>("Total_Rare_Creatures_Slain");

                    b.Property<uint>("Total_Reborns");

                    b.Property<uint>("Total_World_Bosses_Participated");

                    b.Property<uint>("Total_World_Bosses_Slain");

                    b.Property<uint>("Total_XP_Gained");

                    b.Property<uint>("Total_XP_Lost");

                    b.Property<uint>("UncommonBoxCount");

                    b.Property<uint>("VeryRareBoxCount");

                    b.Property<uint>("Weapon_Armor");

                    b.Property<uint>("Weapon_Cost");

                    b.Property<uint>("Weapon_Damage");

                    b.Property<string>("Weapon_Efficient_Class");

                    b.Property<uint>("Weapon_Health");

                    b.Property<uint>("Weapon_Level");

                    b.Property<uint>("Weapon_ModID");

                    b.Property<uint>("Weapon_ModValue");

                    b.Property<string>("Weapon_Name");

                    b.Property<string>("Weapon_Rarity");

                    b.Property<uint>("Weapon_Regen");

                    b.Property<string>("Weapon_URL");

                    b.Property<uint>("WinCount");

                    b.Property<uint>("XP");

                    b.HasKey("UserID");

                    b.ToTable("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
